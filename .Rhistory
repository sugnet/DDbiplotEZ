temp |> plot(type = "intervals")
load_all()
temp |> plot(type = "intervals")
points (x=0.08619173, y=-0.03668754, pch=15, col="red")
points (x=0.01903287, y=-0.0117022, pch=15, col="red")
points (x=0.1404543, y=-0.2996671, pch=15, col="green")
points (x=,-0.0352297 y=0.2512774, pch=15, col="green")
points (x=-0.0352297, y=0.2512774, pch=15, col="green")
load_all()
temp |> plot(type = "intervals")
load_all()
temp |> plot(type = "intervals")
load_all()
temp |> plot(type = "intervals")
load_all()
temp |> plot(type = "intervals")
load_all()
temp |> plot(type = "intervals")
load_all()
temp |> plot(type = "intervals")
load_all()
temp |> plot(type = "intervals")
sample.names <- c("Linseed", "Perilla", "Cotton", "Sesame", "Cmellia", "Olive", "Beef", "Hog")
Spec.gravity <- list(c(0.93, 0.94),
c(0.93, 0.94),
c(0.92, 0.92),
c(0.92, 0.93),
c(0.92, 0.92),
c(0.91, 0.92),
c(0.86, 0.87),
c(0.86, 0.86))
names(Spec.gravity) <- sample.names
Freezing.point <- list(c(-27, -18),
c(-5, -4),
c(-6, -1),
c(-6, -4),
c(-21, -15),
c(0, 6),
c(30, 38),
c(22, 32))
names(Freezing.point) <- sample.names
Iodine.value <- list(c(170, 204),
c(192, 208),
c(99, 113),
c(104, 106),
c(80, 82),
c(79, 90),
c(40, 48),
c(53, 77))
names(Iodine.value) <- sample.names
Saponification <- list(c(118, 196),
c(188, 197),
c(189, 198),
c(187, 193),
c(189, 193),
c(187, 196),
c(190, 199),
c(190, 202))
names(Saponification) <- sample.names
SO.LDP <- c(1.394, 0.343, 0.289, 0.299, 0.277, 0.390, 0.403, 0.452)
names(SO.LDP) <- sample.names
Oils.data <- tidyverse::tibble (Spec.gravity, Freezing.point, Iodine.value, Saponification, SO.LDP)
Oils.interval <- list (Spec.gravity = list (type = "interval",
values = Spec.gravity),
Freezing.point = list (type = "interval",
values = Freezing.point),
Iodine.value = list (type = "interval",
values = Iodine.value),
Saponification = list (type = "interval",
values = Saponification))
class(Oils.interval) <- ddobj
class(Oils.interval) <- "ddobj"
Oils.interval
Spec.gravity
sapply(Spec.gravity, function(x) return (x))
Oils.interval <- list (Spec.gravity = list (type = "interval",
values = t(sapply(Spec.gravity, function(x) return (x)))),
Freezing.point = list (type = "interval",
values = t(sapply(Freezing.point, function(x) return (x)))),
Iodine.value = list (type = "interval",
values = t(sapply(Iodine.value, function(x) return (x)))),
Saponification = list (type = "interval",
values = t(sapply(Saponification, function(x) return (x)))))
class(Oils.interval) <- "ddobj"
Oils.interval
load_all()
load_all()
document()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "intervals")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "intervals")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "intervals")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "intervals")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "intervals")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "intervals")
points (x = -84.9654, y = -13.89401, pch = 15, col="red")
points (x = -101.29586, y = -34.28425, pch = 15, col="red")
points (x = -68.63494, y = 6.49623, pch = 15, col="red")
points (x = mean (-68.63494,-10129586), y = 6.49623, pch = 15, col="red")
points (x = mean (-68.63494,-101.29586), y = 6.49623, pch = 15, col="green")
mean (-68.63494,-101.29586)
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "intervals")
out <- ddbiplot (bike1.int)
temp <- out |> PCA()
temp |> plot(type = "intervals")
temp <- out |> PCA(group.aes=0:23)
temp |> intervals (col=rainbow(24)) |> plot(type = "intervals")
document()
check()
check()
usethis::use_package("withr", "Suggests")
?`:::`
?usethis::use_package
document()
check()
document()
check()
document()
check()
check()
check()
load_all()
create.vertices(Oils.interval, 1)
load_all()
match (5, 1:5)
match (6, 1:5)
?PCA.ddbiplot
?chull
?polygon
document()
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "intervals")
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
temp <- ddbiplot (Oils.interval) |> PCA()
temp$g.names
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
1
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
ddbiplot (Oils.interval) |> PCA() |> vertices(lwd=5) |> plot (type = "vertices")
?polygon
ddbiplot (Oils.interval) |> PCA() |> plot (type = "vertices")
ddbiplot (Oils.interval) |> PCA() |> vertices (label = TRUE) |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> vertices (label = TRUE) |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> vertices (label = TRUE) |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> vertices (label = TRUE) |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> vertices (label = TRUE) |> plot (type = "vertices")
load_all()
ddbiplot (Oils.interval) |> PCA() |> vertices (label = TRUE) |> plot (type = "vertices")
out <- ddbiplot (bike1.int)
temp <- out |> PCA(group.aes=0:23)
temp |> intervals (col=rainbow(24)) |> plot(type = "vertices")
check()
library (devtools)
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> plot()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> plot(type = "intervals")
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> plot (type = "vertices")
ddbiplot (Oils.data) |> PCA() |> vertices (label = TRUE, type = "convexhull") |> plot (type = "vertices")
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> plot(type = "intervals")
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> plot (type = "vertices")
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> vertices (label = TRUE, type = "convexhull") |>
plot (type = "vertices")
check()
install()
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> intervals (label = TRUE) |> plot(type = "intervals")
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> plot (type = "vertices")
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> vertices (label = TRUE, type = "convexhull") |>
plot (type = "vertices")
check()
usethis::use_namespace("S3method(PCA, ddbiplot)")
?usethis::use_namespace
check()
check()
load_all()
load_all()
library (devtools)
document()
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> plot (type = "vertices")
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> vertices (lty=3) |> plot (type = "vertices")
biplotEZ::legend.type
biplotEZ:::biplot.legend
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> legend.type(samples=TRUE) |> plot (type = "vertices")
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> legend.type(samples=TRUE) |> plot (type = "vertices")
ddbiplot (Oils.data, scaled = TRUE) |> PCA(group.aes=c(1,1,1,1,4,4,4,4)) |> legend.type(samples=TRUE) |> plot (type = "vertices")
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA(group.aes=c(1,1,1,1,4,4,4,4)) |> legend.type(samples=TRUE) |> plot (type = "vertices")
biplotEZ::legend.type
out <- ddbiplot (Oils.data, scaled = TRUE) |> PCA(group.aes=c(1,1,1,1,4,4,4,4)) |> legend.type(samples=TRUE)
out
out <- biplotEZ::biplot (iris) |> PCA(group.aes=iris[,5]) |> legend.type(samples=TRUE)
out
out$legend
out$legend.arglist
biplotEZ::biplot (iris) |> PCA(group.aes=iris[,5]) |> legend.type(samples=TRUE) |> plot()
ddbiplot (Oils.data, scaled = TRUE) |> PCA(group.aes=c(1,1,1,1,4,4,4,4)) |> legend.type(samples=TRUE) |> plot()
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA(group.aes=c(1,1,1,1,4,4,4,4)) |> legend.type(samples=TRUE) |> plot()
biplotEZ:::biplot.legend
ddbiplot (Oils.data, scaled = TRUE) |> PCA(group.aes=c(1,1,1,1,4,4,4,4))
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA(group.aes=c(1,1,1,1,4,4,4,4)) |> legend.type(samples=TRUE) |> plot (type = "vertices")
biplotEZ:::biplot.legend
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA(group.aes=c(1,1,1,1,4,4,4,4)) |> legend.type(samples=TRUE) |> plot (type = "vertices")
ddbiplot (Oils.data, scaled = TRUE) |> PCA(group.aes=c(1,1,1,1,4,4,4,4)) |> legend.type(samples=TRUE) |> plot (type = "intervals)
ddbiplot (Oils.data, scaled = TRUE) |> PCA(group.aes=c(1,1,1,1,4,4,4,4)) |> legend.type(samples=TRUE) |> plot (type = "intervals")
args(ddbiplot)
ddbiplot
args(intervals)
args(vertices)
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> intervals (label = TRUE) |> plot(type = "intervals")
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> intervals (lty = 5) |> plot(type = "intervals")
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> intervals (lty = 2) |> plot(type = "intervals")
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> intervals (lty = 3) |> plot(type = "intervals")
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> intervals (lty = 3) |> plot(type = "intervals")
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> intervals (lty = 3) |> plot(type = "intervals")
document()
check()
args(vertices)
args(plot.ddPCA_intervals)
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
getNamespaceExports("biplotEZ")
document()
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> plot(type = "intervals")
args(biplotEZ::axes)
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
?par
?axes
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
pmatch ("interval", c("intervals","vertices"))
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
load_all()
document()
load_all()
check()
names(Oils.data)
rownames(Oils.data[[1]]$values)
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> vertices (type = "convexhull") |>
plot (type = "vertices")
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> vertices (type = "convexhull") |>
plot (type = "vertices")
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> vertices (type = "convexhull") |>
plot (type = "vertices")
# usethis::use_vignette("DDbiplotEZ")
devtools::build_rmd("vignettes/DDbiplotEZ.Rmd")
install()
load_all()
library (devtools)
document()
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> plot(type = "intervals")
View(bike1.int)
load (file = "C:\\Users\\Sugnet\\Downloads\\bike1.RDT")
out <- ddbiplot (bike1.int) |> PCA() |> plot (type = "vertices")
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> plot(type = "intervals")
out <- ddbiplot (bike1.int) |> PCA() |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() vertices(type="connect") |> plot (type = "vertices")
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
create.vertices(bike1.int)
lapply (bike1.int, function (x, i) x$values[i,])
expand.grid(lapply (bike1.int, function (x, i) x$values[i,]))
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="convexhull") |> plot (type = "vertices")
document()
install()
load_all()
out <- ddbiplot (bike1.int) |> PCA() |> vertices(type="connect") |> plot (type = "vertices")
document()
load_all()
install()
install()
library (devtools)
install()
out <- ddbiplot (bike1.int) |> PCA()
load_all()
out <- ddbiplot (bike1.int) |> PCA()
out |> plot (type = "vertices")
load (file = "C:\\Users\\Sugnet\\Downloads\\bike1.RDT")
out <- ddbiplot (bike1.int) |> PCA()
out |> plot (type = "vertices")
out |> intervals(col = "red") |> plot (type = "intervals", add = TRUE)
par(mfrow=c(1,2))
ddbiplot (bike1.int) |> PCA() |> plot (type = "intervals")
X <- matrix (NA, nrow=4, ncol = 3)
for (j in 1:3)
X[,j] <- apply(bike1.int[[j]]$values, 1, mean)
rownames(X) <- rownames(bike1.int[[j]]$values)
colnames(X) <- names(bike1.int)
biplot(X) |> PCA() |> plot()
par(mfrow=c(1,2))
ddbiplot (bike1.int) |> PCA() |> plot (type = "intervals")
X <- matrix (NA, nrow=4, ncol = 3)
for (j in 1:3)
X[,j] <- apply(bike1.int[[j]]$values, 1, mean)
rownames(X) <- rownames(bike1.int[[j]]$values)
colnames(X) <- names(bike1.int)
biplot(X) |> PCA(reflect = "xy") |> plot()
par(mfrow=c(1,2))
ddbiplot (bike1.int) |> PCA() |> plot (type = "intervals")
X <- matrix (NA, nrow=4, ncol = 3)
for (j in 1:3)
X[,j] <- apply(bike1.int[[j]]$values, 1, mean)
rownames(X) <- rownames(bike1.int[[j]]$values)
colnames(X) <- names(bike1.int)
biplot(X) |> PCA() |> reflects ("xy") |> plot()
par(mfrow=c(1,2))
ddbiplot (bike1.int) |> PCA() |> plot (type = "intervals")
X <- matrix (NA, nrow=4, ncol = 3)
for (j in 1:3)
X[,j] <- apply(bike1.int[[j]]$values, 1, mean)
rownames(X) <- rownames(bike1.int[[j]]$values)
colnames(X) <- names(bike1.int)
biplot(X) |> PCA() |> reflect ("xy") |> plot()
temp <- ddbiplot (bike1.int) |> PCA2()
temp
ddbiplot (bike1.int) |> PCA() |> plot (type = "intervals")
temp <- ddbiplot (bike1.int) |> PCA2()
points (temp, col = "red")
ddbiplot (bike1.int) |> PCA() |> plot (type = "intervals")
temp <- ddbiplot (bike1.int) |> PCA2()
points (temp, col = "red")
rm(temp)
rm(X)
rm(j)
rm(out)
x <- TRUE
if (x)
{ return (5)
}
x <- TRUE
if (x)
return (5)
x <- TRUE
if (x)
{ y  <- 5
}
else
x <- TRUE
if (x)
{ y  <- 5
}
else
x <- TRUE
if (x)
y  <- 5
else
x <- TRUE
if (x)  y  <- 5 else   y <- 10
7+y
y <- 1
x <- TRUE
if (x)  break else   y <- 10
load_all()
library (devtools)
document()
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> vertices (type = "convexhull") |>
plot (type = "vertices")
load_all()
ddbiplot (Oils.data, scaled = TRUE) |> PCA() |> vertices (type = "convexhull") |>
plot (type = "vertices")
check()
install()
library (devtools)
install()
install()
check()
library (devtools)
check()
check()
usethis::use_readme_rmd()
library (devtools)
load_all()
iris.int <- suminto.ddobj(iris, entities = c("Species"),
interval = c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"))
iris.int
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "intervals")
load_all()
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "intervals")
load_all()
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "intervals")
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "vertices")
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "vertices", exp.factor=1.5)
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "vertices", exp.factor=1.6)
install()
iris.Species <- c("setosa","versicolor","virginica")
ddbiplot (iris.int, scaled = TRUE) |> PCA(group.aes = iris.Species) |> plot (type = "intervals")
load_all()
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "vertices", exp.factor=1.6)
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "intervals")
load_all()
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "intervals")
ddbiplot (iris.int, scaled = TRUE) |> PCA(group.aes = iris.Species) |> plot (type = "intervals")
load_all()
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "intervals")
load_all()
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "intervals")
load_all()
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "intervals")
ddbiplot (iris.int, scaled = TRUE) |> PCA(group.aes = iris.Species) |> plot (type = "intervals")
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> intervals(label=TRUE) |> plot (type = "intervals")
load_all()
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> intervals(label=TRUE) |> plot (type = "intervals")
load_all()
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> intervals(label=TRUE) |> plot (type = "intervals")
load_all()
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> intervals(label=TRUE) |> plot (type = "intervals")
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> intervals(label=c(T,F,T)) |> plot (type = "intervals")
ddbiplot (iris.int, scaled = TRUE) |> PCA() |> plot (type = "intervals")
install()
